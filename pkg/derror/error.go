package derror

type Error interface {
	error
	Code() string
}

//
// logic errors
//

type Analyze struct {
	code        string
	description string
}

func NewAnalyze() Error {
	err := new(Analyze)
	err.code = "1-1"
	err.description = "Fail analyze"

	return err
}

func (e *Analyze) Code() string {
	return e.code
}

func (e *Analyze) Error() string {
	return e.description
}

type SeleniumError struct {
	code        string
	description string
}

func NewSeleniumError() Error {
	err := new(SeleniumError)
	err.code = "1-2"
	err.description = "Selenium error"

	return err
}

func (e *SeleniumError) Code() string {
	return e.code
}

func (e *SeleniumError) Error() string {
	return e.description
}

//
// internal errors
//

type ServiceError struct {
	code        string
	description string
}

func NewServiceError(description string) Error {
	err := new(ServiceError)
	err.code = "0-1"
	err.description = description

	return err
}

func (e *ServiceError) Code() string {
	return e.code
}

func (e *ServiceError) Error() string {
	return e.description
}

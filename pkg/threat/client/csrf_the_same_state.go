package threat

import (
	"net/http"
	"oauth2-pentester/pkg/derror"
)

type CSRFTheSameState struct {
	baseThreat
}

func NewCSRFTheSameState(authURL string, client *http.Client) *CSRFTheSameState {
	threat := new(CSRFTheSameState)
	threat.authURL = authURL
	threat.client = client

	return threat
}

func (t *CSRFTheSameState) Analyze() (bool, derror.Error) {
	authURL, err := t.getAuthURL()
	if err != nil {
		return false, err
	}
	firstState := authURL.Query().Get(stateParam)

	authURL, err = t.getAuthURL()
	if err != nil {
		return false, err
	}
	secondState := authURL.Query().Get(stateParam)

	if firstState == secondState {
		return false, nil
	}

	return true, nil
}

func (t *CSRFTheSameState) String() string {
	return "CSRF. Новый стейт не генерироваетюся при каждом запросе."
}


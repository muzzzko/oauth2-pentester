package threat

import (
	"net/http"
	"oauth2-pentester/pkg/threat"
	"time"
)

const (
	locationHeader = "location"
	stateParam = "state"
	codeParam = "code"
	defaultTimeout = 5
	grantResponseType = "grant"
	responseTypeParam = "response_type"

	tokenPath = "/token"
	authServerAddr = ":8002"
)

func GetThreats(authURL, callbackURL string) []threat.IThreat {
	client := new(http.Client)
	client.Timeout = time.Second * defaultTimeout
	client.CheckRedirect = func(req *http.Request, via []*http.Request) error {
		return http.ErrUseLastResponse
	}


	threats := make([]threat.IThreat, 0)
	threats = append(threats, NewCSRFNoState(authURL, client))
	threats = append(threats, NewCSRFTheSameState(authURL, client))
	threats = append(threats, NewCSRFMultipleStateUsing(authURL, client))
	threats = append(threats, NewCSRFEmptyState(authURL, client))
	threats = append(threats, NewImplicitCodeFlow(authURL, client))
	threats = append(threats, NewNoTLS(callbackURL, client))

	return threats
}
